# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway PostgreSQL
"""

import os
from pathlib import Path
from sqlalchemy import create_engine, text
from config import config

def test_railway_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway PostgreSQL"""

    print("üîÑ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway PostgreSQL...")
    print("=" * 50)

    try:
        # –ü–æ–ª—É—á–∞–µ–º URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        database_url = config.get_database_url()
        print(f"üìä Database URL: {database_url}")

        # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        engine = create_engine(database_url, echo=False)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        with engine.connect() as connection:
            result = connection.execute(text("SELECT version();"))
            version = result.fetchone()[0]
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìã PostgreSQL –≤–µ—Ä—Å–∏—è: {version}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–±–ª–∏—Ü—ã
            result = connection.execute(text("""
                SELECT table_name
                FROM information_schema.tables
                WHERE table_schema = 'public'
                ORDER BY table_name;
            """))

            tables = result.fetchall()
            if tables:
                print(f"üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã: {[table[0] for table in tables]}")
            else:
                print("üìã –¢–∞–±–ª–∏—Ü –ø–æ–∫–∞ –Ω–µ—Ç (–±—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ)")

        engine.dispose()
        print("üéâ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–æ–π–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ!")

        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("1. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π DATABASE_URL")
        print("2. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Railway –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞")
        print("3. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        print("4. Firewall –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
        return False

def show_current_config():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    print("‚öôÔ∏è –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:")
    print(f"DATABASE_TYPE: {config.DATABASE_TYPE}")
    print(f"DATABASE_URL: {config.DATABASE_URL}")
    if not config.DATABASE_URL:
        print(f"DATABASE_HOST: {config.DATABASE_HOST}")
        print(f"DATABASE_PORT: {config.DATABASE_PORT}")
        print(f"DATABASE_NAME: {config.DATABASE_NAME}")
        print(f"DATABASE_USER: {config.DATABASE_USER}")
        print(f"DATABASE_PASSWORD: {'*' * len(config.DATABASE_PASSWORD) if config.DATABASE_PASSWORD else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")

if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Railway PostgreSQL")
    print("=" * 50)

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    show_current_config()
    print()

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    success = test_railway_connection()

    if not success:
        print("\nüí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ:")
        print("1. –ó–∞–π–¥–∏—Ç–µ –≤ Railway Dashboard")
        print("2. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø—Ä–æ–µ–∫—Ç —Å PostgreSQL")
        print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª 'Variables'")
        print("4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ DATABASE_URL")
        print("5. –í—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –≤ —Ñ–∞–π–ª .env")
        print("6. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
